name: 构建KernelSU版Raspberry Pi 4 Android 13镜像

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: '构建类型 (aosp_rpi4/aosp_rpi4_tv/aosp_rpi4_car)'
        required: true
        default: 'aosp_rpi4'
        type: choice
        options:
          - aosp_rpi4
          - aosp_rpi4_tv
          - aosp_rpi4_car

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 1440  # 24小时超时限制

    steps:
      - name: 检查磁盘空间
        run: |
          df -h
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          df -h

      - name: 安装依赖项
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex g++-multilib gcc-multilib git git-lfs gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev
          sudo apt-get install -y python-is-python3 libncurses5 dosfstools e2fsprogs fdisk kpartx mtools ninja-build pkg-config python3-pip
          sudo pip3 install meson mako jinja2 ply pyyaml dataclasses

      - name: 设置工作环境
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          echo "PATH=~/bin:$PATH" >> $GITHUB_ENV
          echo "USE_CCACHE=1" >> $GITHUB_ENV
          echo "CCACHE_EXEC=/usr/bin/ccache" >> $GITHUB_ENV
          echo "CCACHE_DIR=~/.ccache" >> $GITHUB_ENV
          ccache -M 50G

      - name: 初始化仓库
        run: |
          mkdir -p android-rpi4
          cd android-rpi4
          repo init -u https://android.googlesource.com/platform/manifest -b android-13.0.0_r75 --depth=1
          mkdir -p .repo/local_manifests
          curl -o .repo/local_manifests/manifest_brcm_rpi4.xml -L https://raw.githubusercontent.com/raspberry-vanilla/android_local_manifest/android-13.0/manifest_brcm_rpi4.xml
          curl -o .repo/local_manifests/remove_projects.xml -L https://raw.githubusercontent.com/raspberry-vanilla/android_local_manifest/android-13.0/remove_projects.xml

      - name: 同步源码
        run: |
          cd android-rpi4
          repo sync -j$(nproc) -c --no-clone-bundle --no-tags

      - name: 集成KernelSU
        run: |
          cd android-rpi4/kernel/raspberry/common
          echo "正在集成KernelSU 0.9.5..."
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
          sed -i 's/CONFIG_KSU=.*/CONFIG_KSU=y/' arch/arm64/configs/lineageos_rpi4_defconfig
          sed -i 's/# CONFIG_KSU_DEBUG is not set/CONFIG_KSU_DEBUG=y/' arch/arm64/configs/lineageos_rpi4_defconfig
          echo "# CONFIG_KSU_TEST is not set" >> arch/arm64/configs/lineageos_rpi4_defconfig
          echo "KernelSU已集成到内核"

      - name: 构建镜像
        run: |
          cd android-rpi4
          source build/envsetup.sh
          lunch ${{ github.event.inputs.build_type }}-userdebug
          export ALLOW_MISSING_DEPENDENCIES=true
          export SOONG_MEMORY=16G
          export SKIP_APEX_VALIDATION=true
          export USE_NINJA=true
          export NINJA_ARGS="-j$(nproc)"
          
          # 显示编译环境信息
          echo "正在使用$(nproc)个CPU核心进行编译"
          echo "内存状态:"
          free -h
          
          # 计算合适的并行任务数
          PARALLEL_JOBS=$(echo "$(nproc) * 0.8" | bc | cut -d. -f1)
          [ "$PARALLEL_JOBS" -lt 1 ] && PARALLEL_JOBS=1
          echo "使用${PARALLEL_JOBS}个并行任务"
          
          # 执行编译
          make bootimage systemimage vendorimage -j${PARALLEL_JOBS}
          
          # 创建可刷写镜像
          ./rpi4-mkimg.sh

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: rpi4-android13-kernelsu-${{ github.event.inputs.build_type }}
          path: |
            android-rpi4/out/target/product/*/boot-*
            android-rpi4/out/target/product/*/system.img
            android-rpi4/out/target/product/*/vendor.img
            android-rpi4/out/target/product/*/rpi4-sd.img
