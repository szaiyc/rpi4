name: Build Raspberry Pi Kernel with KernelSU

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: arm64v8/ubuntu:22.04  # 使用 ARM64 的 Ubuntu 容器

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential bc bison flex libssl-dev make
        sudo apt-get install -y libncurses5-dev libncursesw5-dev
        sudo apt-get install -y crossbuild-essential-arm64
        sudo apt-get install -y raspberrypi-kernel-headers

    - name: Clone Raspberry Pi Linux Kernel
      run: |
        git clone --depth=1 --branch rpi-6.1.y https://github.com/raspberrypi/linux
        cd linux
        export KERNEL=kernel8

    - name: Configure Kernel for KernelSU
      run: |
        cd linux
        # 使用默认配置（如 bcm2711_defconfig）
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcm2711_defconfig
        # 启用 KernelSU 必要配置
        echo "CONFIG_KPROBES=y" >> .config
        echo "CONFIG_MODULES=y" >> .config
        echo "CONFIG_MODULE_FORCE_LOAD=y" >> .config
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- oldconfig

    - name: Build Kernel
      run: |
        cd linux
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image modules dtbs -j$(nproc)

    - name: Archive Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kernel-artifacts
        path: |
          linux/arch/arm64/boot/Image
          linux/arch/arm64/boot/dts/broadcom/*.dtb
