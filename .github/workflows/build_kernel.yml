name: 树莓派4B-KernelSU编译

on:
  workflow_dispatch:
    inputs:
      kernel_version:
        description: '内核版本分支'
        required: true
        default: 'rpi-5.15.y'
        type: choice
        options:
          - 'rpi-5.15.y'
          - 'rpi-6.1.y'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检查工作目录
        run: |
          pwd
          ls -la

      - name: 安装依赖项
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison flex libssl-dev make
          sudo apt-get install -y libncurses5-dev libncursesw5-dev
          sudo apt-get install -y crossbuild-essential-arm64
          sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu

      - name: 获取内核源码
        run: |
          git clone --depth=1 --branch ${{ github.event.inputs.kernel_version }} https://github.com/raspberrypi/linux
          cd linux
          # 验证源码是否成功克隆
          if [ ! -d ".git" ]; then
            echo "错误：内核源码克隆失败"
            exit 1
          fi
          ls -la
          
      - name: 应用KernelSU补丁
        run: |
          cd linux
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          # 验证补丁是否成功应用
          if [ $? -ne 0 ]; then
            echo "错误：KernelSU补丁应用失败"
            exit 1
          fi
          
      - name: 配置内核
        run: |
          cd linux
          # 显示当前目录内容
          pwd
          ls -la
          
          # 设置环境变量
          export KERNEL=kernel8
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          # 创建初始配置
          make bcm2711_defconfig
          
          # 验证配置文件是否生成
          if [ ! -f ".config" ]; then
            echo "错误：配置文件未生成"
            exit 1
          fi
          
          # 修改必要的配置选项
          sed -i 's/CONFIG_MODULE_SIG_FORCE=y/# CONFIG_MODULE_SIG_FORCE is not set/' .config
          echo "CONFIG_KPROBES=y" >> .config
          echo "CONFIG_HAVE_KPROBES=y" >> .config
          echo "CONFIG_KPROBE_EVENTS=y" >> .config
          echo "CONFIG_MODULES=y" >> .config
          echo "CONFIG_MODULE_FORCE_LOAD=y" >> .config
          
          # 更新配置
          make olddefconfig
          
          # 显示最终配置
          echo "最终内核配置："
          cat .config
          
      - name: 编译内核
        run: |
          cd linux
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          
          # 清理之前的编译文件
          make clean
          
          # 编译内核（添加详细输出）
          make Image modules dtbs -j$(nproc) V=1 2>&1 | tee build.log
          
          # 检查编译结果
          if [ ! -f "arch/arm64/boot/Image" ]; then
            echo "错误：内核编译失败"
            echo "构建日志最后100行："
            tail -n 100 build.log
            exit 1
          fi
          
      - name: 上传编译日志
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            linux/build.log
            linux/.config
            
      - name: 准备输出文件
        if: success()
        run: |
          mkdir -p output/boot
          mkdir -p output/boot/overlays
          cp linux/arch/arm64/boot/Image output/boot/kernel8_new.img
          cp linux/arch/arm64/boot/dts/broadcom/*.dtb output/boot/
          cp linux/arch/arm64/boot/dts/overlays/*.dtb* output/boot/overlays/
          cp linux/arch/arm64/boot/dts/overlays/README output/boot/overlays/
          
      - name: 上传编译结果
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: raspberry-pi-4b-kernelsu-${{ github.event.inputs.kernel_version }}
          path: output/
